// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Medicare Provider Project partD micro service",
    "title": "partD-api",
    "version": "1.0.0"
  },
  "basePath": "/mppAPI",
  "paths": {
    "/aggregate": {
      "post": {
        "description": "Endpoint accepts a series of query objects to be performed in an aggregate array\n",
        "tags": [
          "aggregate"
        ],
        "summary": "endpoint for aggregate queries",
        "parameters": [
          {
            "description": "query objects to perform on collection",
            "name": "aggregate",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Aggregate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Request",
            "schema": {
              "$ref": "#/definitions/AggregateResult"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "default": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          }
        }
      }
    },
    "/authenticate": {
      "post": {
        "description": "authenticate user",
        "tags": [
          "authenticate"
        ],
        "summary": "authenticate user",
        "parameters": [
          {
            "description": "google oauth user",
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OAuthUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Post successful response",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "default": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          }
        }
      }
    },
    "/change_password": {
      "post": {
        "security": [
          {
            "role_customer": []
          }
        ],
        "description": "Endpoint accepts a user's email, old password, and new password to replace old password in db",
        "tags": [
          "change_password"
        ],
        "summary": "change a user's password",
        "parameters": [
          {
            "name": "change_password",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangePassword"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Request",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "default": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          }
        }
      }
    },
    "/findsummary": {
      "post": {
        "description": "Accepts find parameters for query and returns query results",
        "tags": [
          "findsummary"
        ],
        "summary": "endpoint for find queries in PartD summary",
        "parameters": [
          {
            "description": "query objects include the filter, filter options, year, return fields",
            "name": "findsummary",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FindSummary"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Request",
            "schema": {
              "$ref": "#/definitions/FindResult"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "default": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "description": "log user in and create token",
        "tags": [
          "login"
        ],
        "summary": "user login",
        "parameters": [
          {
            "description": "users login values",
            "name": "login",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Login"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Post successful response",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "default": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          }
        }
      }
    },
    "/logout": {
      "post": {
        "security": [
          {
            "role_customer": []
          }
        ],
        "description": "logs user out by expiring cookie",
        "tags": [
          "logout"
        ],
        "summary": "logs the user out",
        "responses": {
          "200": {
            "description": "Logout successful",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "default": {
            "description": "Logout unexpected error response",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          }
        }
      }
    },
    "/mppaggregate": {
      "post": {
        "description": "Endpoint accepts a series of query objects to be performed in an aggregate array\n",
        "tags": [
          "mppAggregate"
        ],
        "summary": "endpoint for predefined aggregate queries",
        "parameters": [
          {
            "description": "query objects to perform on collection",
            "name": "mppAggregate",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MppAggregate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Request",
            "schema": {
              "$ref": "#/definitions/MppAggregateResult"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "default": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          }
        }
      }
    },
    "/ready": {
      "get": {
        "tags": [
          "ready"
        ],
        "summary": "verify that the API is running and ready to accept requests",
        "responses": {
          "200": {
            "description": "Post successful response",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "default": {
            "description": "Login unexpected error response",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          }
        }
      }
    },
    "/register": {
      "post": {
        "description": "Endpoint accepts an email and password to be saved into db if not already existing",
        "tags": [
          "register"
        ],
        "summary": "create a user",
        "parameters": [
          {
            "description": "insert user",
            "name": "userInfo",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Register"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Request",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "default": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Aggregate": {
      "type": "object",
      "required": [
        "collection",
        "year",
        "aggregate",
        "mapFlag"
      ],
      "properties": {
        "aggregate": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QueryObject"
          }
        },
        "collection": {
          "type": "string"
        },
        "mapFlag": {
          "type": "boolean"
        },
        "page": {
          "type": "integer"
        },
        "year": {
          "type": "string"
        }
      }
    },
    "AggregateResult": {
      "type": "object"
    },
    "Antibiotics": {
      "type": "object",
      "properties": {
        "ceftazidime": {
          "type": "boolean"
        },
        "cost": {
          "type": "integer"
        },
        "count": {
          "type": "integer"
        },
        "geo": {
          "type": "object"
        }
      }
    },
    "ChangePassword": {
      "type": "object",
      "required": [
        "email",
        "password",
        "newPassword"
      ],
      "properties": {
        "email": {
          "type": "string"
        },
        "newPassword": {
          "type": "string"
        },
        "oldPasswords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "password": {
          "type": "string"
        }
      }
    },
    "CompareDrugCosts": {
      "type": "object",
      "properties": {
        "city": {
          "type": "string"
        },
        "coordinates": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "cost_per_claim": {
          "type": "number"
        },
        "drug_name": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "generic_name": {
          "type": "string"
        },
        "last_org_name": {
          "type": "string"
        },
        "npi": {
          "type": "string"
        },
        "physician_address": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PhysicianAddress"
          }
        },
        "state": {
          "type": "string"
        }
      }
    },
    "Demographics": {
      "type": "object",
      "properties": {
        "asianCount": {
          "type": "integer"
        },
        "blackCount": {
          "type": "integer"
        },
        "geo": {
          "type": "object"
        },
        "hispanicCount": {
          "type": "integer"
        },
        "natIndCount": {
          "type": "integer"
        },
        "otherCount": {
          "type": "integer"
        },
        "totalCount": {
          "type": "integer"
        },
        "whiteCount": {
          "type": "integer"
        }
      }
    },
    "DrugListing": {
      "type": "object",
      "properties": {
        "cost_per_claim": {
          "type": "integer"
        },
        "drug_name": {
          "type": "string"
        },
        "generic_name": {
          "type": "string"
        },
        "geo": {
          "type": "object"
        }
      }
    },
    "FindObject": {
      "type": "array",
      "items": {
        "type": "object"
      }
    },
    "FindResult": {
      "type": "object",
      "properties": {
        "DMEPOSDetail": {
          "$ref": "#/definitions/FindObject"
        },
        "DMEPOSSummary": {
          "$ref": "#/definitions/FindObject"
        },
        "PartADetailInpatient": {
          "$ref": "#/definitions/FindObject"
        },
        "PartADetailOutpatient": {
          "$ref": "#/definitions/FindObject"
        },
        "PartASummaryInpatient": {
          "$ref": "#/definitions/FindObject"
        },
        "PartASummaryOutpatient": {
          "$ref": "#/definitions/FindObject"
        },
        "PartBDetail": {
          "$ref": "#/definitions/FindObject"
        },
        "PartBSummary": {
          "$ref": "#/definitions/FindObject"
        },
        "PartDDetail": {
          "$ref": "#/definitions/FindObject"
        },
        "PartDSummary": {
          "$ref": "#/definitions/FindObject"
        }
      }
    },
    "FindSummary": {
      "type": "object",
      "required": [
        "limits",
        "sortOrder",
        "year",
        "dataSet",
        "collection"
      ],
      "properties": {
        "collection": {
          "description": "Must be either Detail or summary",
          "type": "string",
          "pattern": "^(Detail|Summary)$"
        },
        "dataSet": {
          "description": "Which dataset to query",
          "type": "string"
        },
        "find": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "Field": {
                "description": "The field in the DB to filter",
                "type": "string"
              },
              "Value": {
                "description": "The value in the DB to filter",
                "type": "string"
              }
            }
          }
        },
        "limits": {
          "description": "number of results to return",
          "type": "integer",
          "maximum": 100,
          "minimum": 1
        },
        "mapFlag": {
          "type": "boolean"
        },
        "output": {
          "type": "array",
          "items": {
            "description": "The field to return",
            "type": "string"
          }
        },
        "sortOrder": {
          "description": "Sort order is -1, 1 or 0 for not sort",
          "type": "integer",
          "format": "int64",
          "maximum": 1,
          "minimum": -1
        },
        "sortType": {
          "description": "The sort field",
          "type": "string"
        },
        "subDataSet": {
          "description": "Category of dataset",
          "type": "string"
        },
        "year": {
          "description": "The year of results",
          "type": "integer",
          "maximum": 2017,
          "minimum": 2013
        }
      }
    },
    "Gender": {
      "type": "object",
      "properties": {
        "bene_female_count_num": {
          "type": "integer"
        },
        "bene_male_count_num": {
          "type": "integer"
        },
        "city": {
          "type": "string"
        },
        "coordinates": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "female_percentage": {
          "type": "number"
        },
        "male_percentage": {
          "type": "number"
        },
        "npi": {
          "type": "string"
        },
        "specialty": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "street": {
          "type": "string"
        },
        "total_bene_count_num": {
          "type": "integer"
        }
      }
    },
    "GroupParams": {
      "type": "object",
      "required": [
        "matchOn",
        "operationName",
        "operation"
      ],
      "properties": {
        "matchOn": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "operation": {
          "type": "string"
        },
        "operationName": {
          "type": "string"
        },
        "operationObject": {
          "$ref": "#/definitions/OperationObjectParams"
        },
        "operationTarget": {
          "type": "string"
        },
        "operationTargets": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "LisNonlis": {
      "type": "object",
      "properties": {
        "average_lis_claims": {
          "type": "integer"
        },
        "average_lis_drug_costs": {
          "type": "number"
        },
        "average_nonlis_claims": {
          "type": "integer"
        },
        "average_nonlis_drug_costs": {
          "type": "number"
        },
        "geo": {
          "type": "object"
        },
        "total_claims": {
          "type": "integer"
        },
        "total_drug_costs": {
          "type": "number"
        },
        "total_lis_claims": {
          "type": "integer"
        },
        "total_lis_drug_costs": {
          "type": "number"
        },
        "total_nonlis_claims": {
          "type": "integer"
        },
        "total_nonlis_drug_costs": {
          "type": "number"
        }
      }
    },
    "Login": {
      "type": "object",
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "LookupParams": {
      "type": "object",
      "required": [
        "lookupCollection",
        "lookupYear",
        "lookupAs",
        "projectParams"
      ],
      "properties": {
        "lookupAs": {
          "type": "string"
        },
        "lookupCollection": {
          "type": "string"
        },
        "lookupOn": {
          "type": "string"
        },
        "lookupOnArray": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "lookupYear": {
          "type": "string"
        },
        "projectParams": {
          "$ref": "#/definitions/ProjectParams"
        }
      }
    },
    "MatchParams": {
      "type": "object",
      "additionalProperties": false
    },
    "MppAggregate": {
      "type": "object",
      "required": [
        "dataSet",
        "subject",
        "regionType",
        "region",
        "year"
      ],
      "properties": {
        "city": {
          "type": "string"
        },
        "dataSet": {
          "type": "string"
        },
        "drugName": {
          "type": "string"
        },
        "mapFlag": {
          "type": "boolean"
        },
        "npi": {
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "region": {
          "type": "string"
        },
        "regionType": {
          "type": "string"
        },
        "specialty": {
          "type": "string"
        },
        "subject": {
          "type": "string"
        },
        "year": {
          "type": "string"
        }
      }
    },
    "MppAggregateResult": {
      "type": "object",
      "properties": {
        "Antibiotics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Antibiotics"
          }
        },
        "CompareDrugCosts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CompareDrugCosts"
          }
        },
        "Demographics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Demographics"
          }
        },
        "Gender": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Gender"
          }
        },
        "LisNonlis": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LisNonlis"
          }
        },
        "Opioids": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Opioids"
          }
        },
        "PhysicianDrugList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PhysicianDrugList"
          }
        }
      }
    },
    "OAuthUser": {
      "type": "object",
      "required": [
        "email"
      ],
      "properties": {
        "email": {
          "type": "string"
        }
      }
    },
    "OperationObjectParams": {
      "type": "object",
      "additionalProperties": false
    },
    "Opioids": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer"
        },
        "geo": {
          "type": "object"
        },
        "id": {
          "type": "string"
        },
        "laCount": {
          "type": "integer"
        },
        "laPrescriberRate": {
          "type": "number"
        },
        "prescriberRate": {
          "type": "number"
        }
      }
    },
    "PhysicianAddress": {
      "type": "object",
      "properties": {
        "coordinates": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "npi": {
          "type": "string"
        },
        "street1": {
          "type": "string"
        }
      }
    },
    "PhysicianDrugList": {
      "type": "object",
      "properties": {
        "brandClaimCountNum": {
          "type": "integer"
        },
        "brandNamePercent": {
          "type": "number"
        },
        "city": {
          "type": "string"
        },
        "coordinates": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "genericClaimCountNum": {
          "type": "integer"
        },
        "npi": {
          "type": "string"
        },
        "physicianDrugList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DrugListing"
          }
        },
        "specialty": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "street": {
          "type": "string"
        },
        "totalClaimCountNum": {
          "type": "integer"
        },
        "totalDrugCostNum": {
          "type": "number"
        }
      }
    },
    "ProjectParams": {
      "type": "object",
      "additionalProperties": false
    },
    "QueryObject": {
      "type": "object",
      "properties": {
        "groupQuery": {
          "$ref": "#/definitions/GroupParams"
        },
        "lookupQuery": {
          "$ref": "#/definitions/LookupParams"
        },
        "matchQuery": {
          "$ref": "#/definitions/MatchParams"
        },
        "projectQuery": {
          "$ref": "#/definitions/ProjectParams"
        },
        "sortQuery": {
          "$ref": "#/definitions/SortParams"
        }
      }
    },
    "Register": {
      "type": "object",
      "required": [
        "firstName",
        "lastName",
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "userID": {
          "type": "string"
        }
      }
    },
    "ReturnCode": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SortParams": {
      "type": "object",
      "additionalProperties": false
    },
    "User": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "expiry": {
          "type": "string",
          "format": "date-time"
        },
        "password": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "userID": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "role_customer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Medicare Provider Project partD micro service",
    "title": "partD-api",
    "version": "1.0.0"
  },
  "basePath": "/mppAPI",
  "paths": {
    "/aggregate": {
      "post": {
        "description": "Endpoint accepts a series of query objects to be performed in an aggregate array\n",
        "tags": [
          "aggregate"
        ],
        "summary": "endpoint for aggregate queries",
        "parameters": [
          {
            "description": "query objects to perform on collection",
            "name": "aggregate",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Aggregate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Request",
            "schema": {
              "$ref": "#/definitions/AggregateResult"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "default": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          }
        }
      }
    },
    "/authenticate": {
      "post": {
        "description": "authenticate user",
        "tags": [
          "authenticate"
        ],
        "summary": "authenticate user",
        "parameters": [
          {
            "description": "google oauth user",
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OAuthUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Post successful response",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "default": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          }
        }
      }
    },
    "/change_password": {
      "post": {
        "security": [
          {
            "role_customer": []
          }
        ],
        "description": "Endpoint accepts a user's email, old password, and new password to replace old password in db",
        "tags": [
          "change_password"
        ],
        "summary": "change a user's password",
        "parameters": [
          {
            "name": "change_password",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangePassword"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Request",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "default": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          }
        }
      }
    },
    "/findsummary": {
      "post": {
        "description": "Accepts find parameters for query and returns query results",
        "tags": [
          "findsummary"
        ],
        "summary": "endpoint for find queries in PartD summary",
        "parameters": [
          {
            "description": "query objects include the filter, filter options, year, return fields",
            "name": "findsummary",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FindSummary"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Request",
            "schema": {
              "$ref": "#/definitions/FindResult"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "default": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "description": "log user in and create token",
        "tags": [
          "login"
        ],
        "summary": "user login",
        "parameters": [
          {
            "description": "users login values",
            "name": "login",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Login"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Post successful response",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "default": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          }
        }
      }
    },
    "/logout": {
      "post": {
        "security": [
          {
            "role_customer": []
          }
        ],
        "description": "logs user out by expiring cookie",
        "tags": [
          "logout"
        ],
        "summary": "logs the user out",
        "responses": {
          "200": {
            "description": "Logout successful",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "default": {
            "description": "Logout unexpected error response",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          }
        }
      }
    },
    "/mppaggregate": {
      "post": {
        "description": "Endpoint accepts a series of query objects to be performed in an aggregate array\n",
        "tags": [
          "mppAggregate"
        ],
        "summary": "endpoint for predefined aggregate queries",
        "parameters": [
          {
            "description": "query objects to perform on collection",
            "name": "mppAggregate",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MppAggregate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Request",
            "schema": {
              "$ref": "#/definitions/MppAggregateResult"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "default": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          }
        }
      }
    },
    "/ready": {
      "get": {
        "tags": [
          "ready"
        ],
        "summary": "verify that the API is running and ready to accept requests",
        "responses": {
          "200": {
            "description": "Post successful response",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "default": {
            "description": "Login unexpected error response",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          }
        }
      }
    },
    "/register": {
      "post": {
        "description": "Endpoint accepts an email and password to be saved into db if not already existing",
        "tags": [
          "register"
        ],
        "summary": "create a user",
        "parameters": [
          {
            "description": "insert user",
            "name": "userInfo",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Register"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Request",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          },
          "default": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/ReturnCode"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Aggregate": {
      "type": "object",
      "required": [
        "collection",
        "year",
        "aggregate",
        "mapFlag"
      ],
      "properties": {
        "aggregate": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QueryObject"
          }
        },
        "collection": {
          "type": "string"
        },
        "mapFlag": {
          "type": "boolean"
        },
        "page": {
          "type": "integer"
        },
        "year": {
          "type": "string"
        }
      }
    },
    "AggregateResult": {
      "type": "object"
    },
    "Antibiotics": {
      "type": "object",
      "properties": {
        "ceftazidime": {
          "type": "boolean"
        },
        "cost": {
          "type": "integer"
        },
        "count": {
          "type": "integer"
        },
        "geo": {
          "type": "object"
        }
      }
    },
    "ChangePassword": {
      "type": "object",
      "required": [
        "email",
        "password",
        "newPassword"
      ],
      "properties": {
        "email": {
          "type": "string"
        },
        "newPassword": {
          "type": "string"
        },
        "oldPasswords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "password": {
          "type": "string"
        }
      }
    },
    "CompareDrugCosts": {
      "type": "object",
      "properties": {
        "city": {
          "type": "string"
        },
        "coordinates": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "cost_per_claim": {
          "type": "number"
        },
        "drug_name": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "generic_name": {
          "type": "string"
        },
        "last_org_name": {
          "type": "string"
        },
        "npi": {
          "type": "string"
        },
        "physician_address": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PhysicianAddress"
          }
        },
        "state": {
          "type": "string"
        }
      }
    },
    "Demographics": {
      "type": "object",
      "properties": {
        "asianCount": {
          "type": "integer"
        },
        "blackCount": {
          "type": "integer"
        },
        "geo": {
          "type": "object"
        },
        "hispanicCount": {
          "type": "integer"
        },
        "natIndCount": {
          "type": "integer"
        },
        "otherCount": {
          "type": "integer"
        },
        "totalCount": {
          "type": "integer"
        },
        "whiteCount": {
          "type": "integer"
        }
      }
    },
    "DrugListing": {
      "type": "object",
      "properties": {
        "cost_per_claim": {
          "type": "integer"
        },
        "drug_name": {
          "type": "string"
        },
        "generic_name": {
          "type": "string"
        },
        "geo": {
          "type": "object"
        }
      }
    },
    "FindObject": {
      "type": "array",
      "items": {
        "type": "object"
      }
    },
    "FindResult": {
      "type": "object",
      "properties": {
        "DMEPOSDetail": {
          "$ref": "#/definitions/FindObject"
        },
        "DMEPOSSummary": {
          "$ref": "#/definitions/FindObject"
        },
        "PartADetailInpatient": {
          "$ref": "#/definitions/FindObject"
        },
        "PartADetailOutpatient": {
          "$ref": "#/definitions/FindObject"
        },
        "PartASummaryInpatient": {
          "$ref": "#/definitions/FindObject"
        },
        "PartASummaryOutpatient": {
          "$ref": "#/definitions/FindObject"
        },
        "PartBDetail": {
          "$ref": "#/definitions/FindObject"
        },
        "PartBSummary": {
          "$ref": "#/definitions/FindObject"
        },
        "PartDDetail": {
          "$ref": "#/definitions/FindObject"
        },
        "PartDSummary": {
          "$ref": "#/definitions/FindObject"
        }
      }
    },
    "FindSummary": {
      "type": "object",
      "required": [
        "limits",
        "sortOrder",
        "year",
        "dataSet",
        "collection"
      ],
      "properties": {
        "collection": {
          "description": "Must be either Detail or summary",
          "type": "string",
          "pattern": "^(Detail|Summary)$"
        },
        "dataSet": {
          "description": "Which dataset to query",
          "type": "string"
        },
        "find": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FindSummaryFindItems0"
          }
        },
        "limits": {
          "description": "number of results to return",
          "type": "integer",
          "maximum": 100,
          "minimum": 1
        },
        "mapFlag": {
          "type": "boolean"
        },
        "output": {
          "type": "array",
          "items": {
            "description": "The field to return",
            "type": "string"
          }
        },
        "sortOrder": {
          "description": "Sort order is -1, 1 or 0 for not sort",
          "type": "integer",
          "format": "int64",
          "maximum": 1,
          "minimum": -1
        },
        "sortType": {
          "description": "The sort field",
          "type": "string"
        },
        "subDataSet": {
          "description": "Category of dataset",
          "type": "string"
        },
        "year": {
          "description": "The year of results",
          "type": "integer",
          "maximum": 2017,
          "minimum": 2013
        }
      }
    },
    "FindSummaryFindItems0": {
      "type": "object",
      "properties": {
        "Field": {
          "description": "The field in the DB to filter",
          "type": "string"
        },
        "Value": {
          "description": "The value in the DB to filter",
          "type": "string"
        }
      }
    },
    "Gender": {
      "type": "object",
      "properties": {
        "bene_female_count_num": {
          "type": "integer"
        },
        "bene_male_count_num": {
          "type": "integer"
        },
        "city": {
          "type": "string"
        },
        "coordinates": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "female_percentage": {
          "type": "number"
        },
        "male_percentage": {
          "type": "number"
        },
        "npi": {
          "type": "string"
        },
        "specialty": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "street": {
          "type": "string"
        },
        "total_bene_count_num": {
          "type": "integer"
        }
      }
    },
    "GroupParams": {
      "type": "object",
      "required": [
        "matchOn",
        "operationName",
        "operation"
      ],
      "properties": {
        "matchOn": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "operation": {
          "type": "string"
        },
        "operationName": {
          "type": "string"
        },
        "operationObject": {
          "$ref": "#/definitions/OperationObjectParams"
        },
        "operationTarget": {
          "type": "string"
        },
        "operationTargets": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "LisNonlis": {
      "type": "object",
      "properties": {
        "average_lis_claims": {
          "type": "integer"
        },
        "average_lis_drug_costs": {
          "type": "number"
        },
        "average_nonlis_claims": {
          "type": "integer"
        },
        "average_nonlis_drug_costs": {
          "type": "number"
        },
        "geo": {
          "type": "object"
        },
        "total_claims": {
          "type": "integer"
        },
        "total_drug_costs": {
          "type": "number"
        },
        "total_lis_claims": {
          "type": "integer"
        },
        "total_lis_drug_costs": {
          "type": "number"
        },
        "total_nonlis_claims": {
          "type": "integer"
        },
        "total_nonlis_drug_costs": {
          "type": "number"
        }
      }
    },
    "Login": {
      "type": "object",
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "LookupParams": {
      "type": "object",
      "required": [
        "lookupCollection",
        "lookupYear",
        "lookupAs",
        "projectParams"
      ],
      "properties": {
        "lookupAs": {
          "type": "string"
        },
        "lookupCollection": {
          "type": "string"
        },
        "lookupOn": {
          "type": "string"
        },
        "lookupOnArray": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "lookupYear": {
          "type": "string"
        },
        "projectParams": {
          "$ref": "#/definitions/ProjectParams"
        }
      }
    },
    "MatchParams": {
      "type": "object",
      "additionalProperties": false
    },
    "MppAggregate": {
      "type": "object",
      "required": [
        "dataSet",
        "subject",
        "regionType",
        "region",
        "year"
      ],
      "properties": {
        "city": {
          "type": "string"
        },
        "dataSet": {
          "type": "string"
        },
        "drugName": {
          "type": "string"
        },
        "mapFlag": {
          "type": "boolean"
        },
        "npi": {
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "region": {
          "type": "string"
        },
        "regionType": {
          "type": "string"
        },
        "specialty": {
          "type": "string"
        },
        "subject": {
          "type": "string"
        },
        "year": {
          "type": "string"
        }
      }
    },
    "MppAggregateResult": {
      "type": "object",
      "properties": {
        "Antibiotics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Antibiotics"
          }
        },
        "CompareDrugCosts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CompareDrugCosts"
          }
        },
        "Demographics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Demographics"
          }
        },
        "Gender": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Gender"
          }
        },
        "LisNonlis": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LisNonlis"
          }
        },
        "Opioids": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Opioids"
          }
        },
        "PhysicianDrugList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PhysicianDrugList"
          }
        }
      }
    },
    "OAuthUser": {
      "type": "object",
      "required": [
        "email"
      ],
      "properties": {
        "email": {
          "type": "string"
        }
      }
    },
    "OperationObjectParams": {
      "type": "object",
      "additionalProperties": false
    },
    "Opioids": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer"
        },
        "geo": {
          "type": "object"
        },
        "id": {
          "type": "string"
        },
        "laCount": {
          "type": "integer"
        },
        "laPrescriberRate": {
          "type": "number"
        },
        "prescriberRate": {
          "type": "number"
        }
      }
    },
    "PhysicianAddress": {
      "type": "object",
      "properties": {
        "coordinates": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "npi": {
          "type": "string"
        },
        "street1": {
          "type": "string"
        }
      }
    },
    "PhysicianDrugList": {
      "type": "object",
      "properties": {
        "brandClaimCountNum": {
          "type": "integer"
        },
        "brandNamePercent": {
          "type": "number"
        },
        "city": {
          "type": "string"
        },
        "coordinates": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "genericClaimCountNum": {
          "type": "integer"
        },
        "npi": {
          "type": "string"
        },
        "physicianDrugList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DrugListing"
          }
        },
        "specialty": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "street": {
          "type": "string"
        },
        "totalClaimCountNum": {
          "type": "integer"
        },
        "totalDrugCostNum": {
          "type": "number"
        }
      }
    },
    "ProjectParams": {
      "type": "object",
      "additionalProperties": false
    },
    "QueryObject": {
      "type": "object",
      "properties": {
        "groupQuery": {
          "$ref": "#/definitions/GroupParams"
        },
        "lookupQuery": {
          "$ref": "#/definitions/LookupParams"
        },
        "matchQuery": {
          "$ref": "#/definitions/MatchParams"
        },
        "projectQuery": {
          "$ref": "#/definitions/ProjectParams"
        },
        "sortQuery": {
          "$ref": "#/definitions/SortParams"
        }
      }
    },
    "Register": {
      "type": "object",
      "required": [
        "firstName",
        "lastName",
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "userID": {
          "type": "string"
        }
      }
    },
    "ReturnCode": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SortParams": {
      "type": "object",
      "additionalProperties": false
    },
    "User": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "expiry": {
          "type": "string",
          "format": "date-time"
        },
        "password": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "userID": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "role_customer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}`))
}
