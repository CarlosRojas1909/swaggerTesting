// Code generated by go-swagger; DO NOT EDIT.

package authenticate

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/JCbayfisher/swaggerTesting/models"
)

// PostAuthenticateOKCode is the HTTP code returned for type PostAuthenticateOK
const PostAuthenticateOKCode int = 200

/*PostAuthenticateOK Post successful response

swagger:response postAuthenticateOK
*/
type PostAuthenticateOK struct {

	/*
	  In: Body
	*/
	Payload *models.ReturnCode `json:"body,omitempty"`
}

// NewPostAuthenticateOK creates PostAuthenticateOK with default headers values
func NewPostAuthenticateOK() *PostAuthenticateOK {

	return &PostAuthenticateOK{}
}

// WithPayload adds the payload to the post authenticate o k response
func (o *PostAuthenticateOK) WithPayload(payload *models.ReturnCode) *PostAuthenticateOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post authenticate o k response
func (o *PostAuthenticateOK) SetPayload(payload *models.ReturnCode) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostAuthenticateOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostAuthenticateBadRequestCode is the HTTP code returned for type PostAuthenticateBadRequest
const PostAuthenticateBadRequestCode int = 400

/*PostAuthenticateBadRequest Bad Request

swagger:response postAuthenticateBadRequest
*/
type PostAuthenticateBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ReturnCode `json:"body,omitempty"`
}

// NewPostAuthenticateBadRequest creates PostAuthenticateBadRequest with default headers values
func NewPostAuthenticateBadRequest() *PostAuthenticateBadRequest {

	return &PostAuthenticateBadRequest{}
}

// WithPayload adds the payload to the post authenticate bad request response
func (o *PostAuthenticateBadRequest) WithPayload(payload *models.ReturnCode) *PostAuthenticateBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post authenticate bad request response
func (o *PostAuthenticateBadRequest) SetPayload(payload *models.ReturnCode) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostAuthenticateBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostAuthenticateUnauthorizedCode is the HTTP code returned for type PostAuthenticateUnauthorized
const PostAuthenticateUnauthorizedCode int = 401

/*PostAuthenticateUnauthorized Unauthorized

swagger:response postAuthenticateUnauthorized
*/
type PostAuthenticateUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ReturnCode `json:"body,omitempty"`
}

// NewPostAuthenticateUnauthorized creates PostAuthenticateUnauthorized with default headers values
func NewPostAuthenticateUnauthorized() *PostAuthenticateUnauthorized {

	return &PostAuthenticateUnauthorized{}
}

// WithPayload adds the payload to the post authenticate unauthorized response
func (o *PostAuthenticateUnauthorized) WithPayload(payload *models.ReturnCode) *PostAuthenticateUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post authenticate unauthorized response
func (o *PostAuthenticateUnauthorized) SetPayload(payload *models.ReturnCode) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostAuthenticateUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostAuthenticateNotFoundCode is the HTTP code returned for type PostAuthenticateNotFound
const PostAuthenticateNotFoundCode int = 404

/*PostAuthenticateNotFound Not Found

swagger:response postAuthenticateNotFound
*/
type PostAuthenticateNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ReturnCode `json:"body,omitempty"`
}

// NewPostAuthenticateNotFound creates PostAuthenticateNotFound with default headers values
func NewPostAuthenticateNotFound() *PostAuthenticateNotFound {

	return &PostAuthenticateNotFound{}
}

// WithPayload adds the payload to the post authenticate not found response
func (o *PostAuthenticateNotFound) WithPayload(payload *models.ReturnCode) *PostAuthenticateNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post authenticate not found response
func (o *PostAuthenticateNotFound) SetPayload(payload *models.ReturnCode) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostAuthenticateNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostAuthenticateInternalServerErrorCode is the HTTP code returned for type PostAuthenticateInternalServerError
const PostAuthenticateInternalServerErrorCode int = 500

/*PostAuthenticateInternalServerError Internal Server Error

swagger:response postAuthenticateInternalServerError
*/
type PostAuthenticateInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ReturnCode `json:"body,omitempty"`
}

// NewPostAuthenticateInternalServerError creates PostAuthenticateInternalServerError with default headers values
func NewPostAuthenticateInternalServerError() *PostAuthenticateInternalServerError {

	return &PostAuthenticateInternalServerError{}
}

// WithPayload adds the payload to the post authenticate internal server error response
func (o *PostAuthenticateInternalServerError) WithPayload(payload *models.ReturnCode) *PostAuthenticateInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post authenticate internal server error response
func (o *PostAuthenticateInternalServerError) SetPayload(payload *models.ReturnCode) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostAuthenticateInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PostAuthenticateDefault Unexpected Error

swagger:response postAuthenticateDefault
*/
type PostAuthenticateDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.ReturnCode `json:"body,omitempty"`
}

// NewPostAuthenticateDefault creates PostAuthenticateDefault with default headers values
func NewPostAuthenticateDefault(code int) *PostAuthenticateDefault {
	if code <= 0 {
		code = 500
	}

	return &PostAuthenticateDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post authenticate default response
func (o *PostAuthenticateDefault) WithStatusCode(code int) *PostAuthenticateDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post authenticate default response
func (o *PostAuthenticateDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the post authenticate default response
func (o *PostAuthenticateDefault) WithPayload(payload *models.ReturnCode) *PostAuthenticateDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post authenticate default response
func (o *PostAuthenticateDefault) SetPayload(payload *models.ReturnCode) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostAuthenticateDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
