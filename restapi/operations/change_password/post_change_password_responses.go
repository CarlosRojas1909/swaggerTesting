// Code generated by go-swagger; DO NOT EDIT.

package change_password

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/JCbayfisher/swaggerTesting/models"
)

// PostChangePasswordOKCode is the HTTP code returned for type PostChangePasswordOK
const PostChangePasswordOKCode int = 200

/*PostChangePasswordOK Successful Request

swagger:response postChangePasswordOK
*/
type PostChangePasswordOK struct {

	/*
	  In: Body
	*/
	Payload *models.ReturnCode `json:"body,omitempty"`
}

// NewPostChangePasswordOK creates PostChangePasswordOK with default headers values
func NewPostChangePasswordOK() *PostChangePasswordOK {

	return &PostChangePasswordOK{}
}

// WithPayload adds the payload to the post change password o k response
func (o *PostChangePasswordOK) WithPayload(payload *models.ReturnCode) *PostChangePasswordOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post change password o k response
func (o *PostChangePasswordOK) SetPayload(payload *models.ReturnCode) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostChangePasswordOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostChangePasswordBadRequestCode is the HTTP code returned for type PostChangePasswordBadRequest
const PostChangePasswordBadRequestCode int = 400

/*PostChangePasswordBadRequest Bad Request

swagger:response postChangePasswordBadRequest
*/
type PostChangePasswordBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ReturnCode `json:"body,omitempty"`
}

// NewPostChangePasswordBadRequest creates PostChangePasswordBadRequest with default headers values
func NewPostChangePasswordBadRequest() *PostChangePasswordBadRequest {

	return &PostChangePasswordBadRequest{}
}

// WithPayload adds the payload to the post change password bad request response
func (o *PostChangePasswordBadRequest) WithPayload(payload *models.ReturnCode) *PostChangePasswordBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post change password bad request response
func (o *PostChangePasswordBadRequest) SetPayload(payload *models.ReturnCode) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostChangePasswordBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostChangePasswordNotFoundCode is the HTTP code returned for type PostChangePasswordNotFound
const PostChangePasswordNotFoundCode int = 404

/*PostChangePasswordNotFound Not Found

swagger:response postChangePasswordNotFound
*/
type PostChangePasswordNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ReturnCode `json:"body,omitempty"`
}

// NewPostChangePasswordNotFound creates PostChangePasswordNotFound with default headers values
func NewPostChangePasswordNotFound() *PostChangePasswordNotFound {

	return &PostChangePasswordNotFound{}
}

// WithPayload adds the payload to the post change password not found response
func (o *PostChangePasswordNotFound) WithPayload(payload *models.ReturnCode) *PostChangePasswordNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post change password not found response
func (o *PostChangePasswordNotFound) SetPayload(payload *models.ReturnCode) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostChangePasswordNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostChangePasswordInternalServerErrorCode is the HTTP code returned for type PostChangePasswordInternalServerError
const PostChangePasswordInternalServerErrorCode int = 500

/*PostChangePasswordInternalServerError Internal Server Error

swagger:response postChangePasswordInternalServerError
*/
type PostChangePasswordInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ReturnCode `json:"body,omitempty"`
}

// NewPostChangePasswordInternalServerError creates PostChangePasswordInternalServerError with default headers values
func NewPostChangePasswordInternalServerError() *PostChangePasswordInternalServerError {

	return &PostChangePasswordInternalServerError{}
}

// WithPayload adds the payload to the post change password internal server error response
func (o *PostChangePasswordInternalServerError) WithPayload(payload *models.ReturnCode) *PostChangePasswordInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post change password internal server error response
func (o *PostChangePasswordInternalServerError) SetPayload(payload *models.ReturnCode) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostChangePasswordInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PostChangePasswordDefault Unexpected Error

swagger:response postChangePasswordDefault
*/
type PostChangePasswordDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.ReturnCode `json:"body,omitempty"`
}

// NewPostChangePasswordDefault creates PostChangePasswordDefault with default headers values
func NewPostChangePasswordDefault(code int) *PostChangePasswordDefault {
	if code <= 0 {
		code = 500
	}

	return &PostChangePasswordDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post change password default response
func (o *PostChangePasswordDefault) WithStatusCode(code int) *PostChangePasswordDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post change password default response
func (o *PostChangePasswordDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the post change password default response
func (o *PostChangePasswordDefault) WithPayload(payload *models.ReturnCode) *PostChangePasswordDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post change password default response
func (o *PostChangePasswordDefault) SetPayload(payload *models.ReturnCode) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostChangePasswordDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
