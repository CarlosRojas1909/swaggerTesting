// Code generated by go-swagger; DO NOT EDIT.

package aggregate

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/JCbayfisher/swaggerTesting/models"
)

// PostAggregateOKCode is the HTTP code returned for type PostAggregateOK
const PostAggregateOKCode int = 200

/*PostAggregateOK Successful Request

swagger:response postAggregateOK
*/
type PostAggregateOK struct {

	/*
	  In: Body
	*/
	Payload models.AggregateResult `json:"body,omitempty"`
}

// NewPostAggregateOK creates PostAggregateOK with default headers values
func NewPostAggregateOK() *PostAggregateOK {

	return &PostAggregateOK{}
}

// WithPayload adds the payload to the post aggregate o k response
func (o *PostAggregateOK) WithPayload(payload models.AggregateResult) *PostAggregateOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post aggregate o k response
func (o *PostAggregateOK) SetPayload(payload models.AggregateResult) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostAggregateOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// PostAggregateBadRequestCode is the HTTP code returned for type PostAggregateBadRequest
const PostAggregateBadRequestCode int = 400

/*PostAggregateBadRequest Bad Request

swagger:response postAggregateBadRequest
*/
type PostAggregateBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ReturnCode `json:"body,omitempty"`
}

// NewPostAggregateBadRequest creates PostAggregateBadRequest with default headers values
func NewPostAggregateBadRequest() *PostAggregateBadRequest {

	return &PostAggregateBadRequest{}
}

// WithPayload adds the payload to the post aggregate bad request response
func (o *PostAggregateBadRequest) WithPayload(payload *models.ReturnCode) *PostAggregateBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post aggregate bad request response
func (o *PostAggregateBadRequest) SetPayload(payload *models.ReturnCode) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostAggregateBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostAggregateNotFoundCode is the HTTP code returned for type PostAggregateNotFound
const PostAggregateNotFoundCode int = 404

/*PostAggregateNotFound Not Found

swagger:response postAggregateNotFound
*/
type PostAggregateNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ReturnCode `json:"body,omitempty"`
}

// NewPostAggregateNotFound creates PostAggregateNotFound with default headers values
func NewPostAggregateNotFound() *PostAggregateNotFound {

	return &PostAggregateNotFound{}
}

// WithPayload adds the payload to the post aggregate not found response
func (o *PostAggregateNotFound) WithPayload(payload *models.ReturnCode) *PostAggregateNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post aggregate not found response
func (o *PostAggregateNotFound) SetPayload(payload *models.ReturnCode) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostAggregateNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostAggregateInternalServerErrorCode is the HTTP code returned for type PostAggregateInternalServerError
const PostAggregateInternalServerErrorCode int = 500

/*PostAggregateInternalServerError Internal Server Error

swagger:response postAggregateInternalServerError
*/
type PostAggregateInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ReturnCode `json:"body,omitempty"`
}

// NewPostAggregateInternalServerError creates PostAggregateInternalServerError with default headers values
func NewPostAggregateInternalServerError() *PostAggregateInternalServerError {

	return &PostAggregateInternalServerError{}
}

// WithPayload adds the payload to the post aggregate internal server error response
func (o *PostAggregateInternalServerError) WithPayload(payload *models.ReturnCode) *PostAggregateInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post aggregate internal server error response
func (o *PostAggregateInternalServerError) SetPayload(payload *models.ReturnCode) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostAggregateInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PostAggregateDefault Unexpected Error

swagger:response postAggregateDefault
*/
type PostAggregateDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.ReturnCode `json:"body,omitempty"`
}

// NewPostAggregateDefault creates PostAggregateDefault with default headers values
func NewPostAggregateDefault(code int) *PostAggregateDefault {
	if code <= 0 {
		code = 500
	}

	return &PostAggregateDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post aggregate default response
func (o *PostAggregateDefault) WithStatusCode(code int) *PostAggregateDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post aggregate default response
func (o *PostAggregateDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the post aggregate default response
func (o *PostAggregateDefault) WithPayload(payload *models.ReturnCode) *PostAggregateDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post aggregate default response
func (o *PostAggregateDefault) SetPayload(payload *models.ReturnCode) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostAggregateDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
