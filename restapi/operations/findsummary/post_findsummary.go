// Code generated by go-swagger; DO NOT EDIT.

package findsummary

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// PostFindsummaryHandlerFunc turns a function with the right signature into a post findsummary handler
type PostFindsummaryHandlerFunc func(PostFindsummaryParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PostFindsummaryHandlerFunc) Handle(params PostFindsummaryParams) middleware.Responder {
	return fn(params)
}

// PostFindsummaryHandler interface for that can handle valid post findsummary params
type PostFindsummaryHandler interface {
	Handle(PostFindsummaryParams) middleware.Responder
}

// NewPostFindsummary creates a new http.Handler for the post findsummary operation
func NewPostFindsummary(ctx *middleware.Context, handler PostFindsummaryHandler) *PostFindsummary {
	return &PostFindsummary{Context: ctx, Handler: handler}
}

/* PostFindsummary swagger:route POST /findsummary findsummary postFindsummary

endpoint for find queries in PartD summary

Accepts find parameters for query and returns query results

*/
type PostFindsummary struct {
	Context *middleware.Context
	Handler PostFindsummaryHandler
}

func (o *PostFindsummary) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewPostFindsummaryParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
